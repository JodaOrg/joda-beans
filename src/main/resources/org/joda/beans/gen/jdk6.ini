#copies using JDK 6 classes only

# how to copy $value to make it immutable
[immutable.builder.to.immutable]
Collection = Collections.unmodifiableCollection(new ArrayList<>($value))
List = Collections.unmodifiableList(new ArrayList<>($value))
Set = Collections.unmodifiableSet(new HashSet<>($value))
Map = Collections.unmodifiableMap(new HashMap<>($value))
SortedMap = Collections.unmodifiableSortedMap(new TreeMap<>($value))
ImmutableBean = $value

# how to copy $value to make it mutable
[immutable.builder.to.mutable]
Collection = new ArrayList<>($value)
List = new ArrayList<>($value)
Set = new HashSet<>($value)
Map = new HashMap<>($value)
SortedMap = new TreeMap<>($value)
ImmutableBean = $value

# the initializer to use for collections in the builder
[immutable.builder.init]
Collection = new ArrayList<>();
List = new ArrayList<>();
Set = new HashSet<>();
Map = new HashMap<>();
SortedMap = new TreeMap<>();

# provide the ability to handle clone-on-get or immutable classes
[immutable.get.clone]
Date = cloneCast
Object[] = clone
String[] = clone
byte[] = clone
char[] = clone
short[] = clone
int[] = clone
long[] = clone
float[] = clone
double[] = clone

# types that invalid in immutable beans
[immutable.invalid.type]
StringBuilder =
StringBuffer =
ConcurrentMap =
ConcurrentNavigableMap =
ArrayList =
LinkedList =
HashSet =
SortedSet =
NavigableSet =
NavigableMap =
TreeSet =
HashMap =
TreeMap =
ConcurrentHashMap =
ConcurrentSkipListMap =
Multimap =
ListMultimap =
SetMultimap =
Multiset =
SortedMultiset =
ImmutableCollection =
ImmutableList =
ImmutableSet =
ImmutableSortedSet
ImmutableMap =
ImmutableSortedMap =
ImmutableBiMap =
ImmutableMultimap =
ImmutableListMultimap =
ImmutableSetMultimap =
ImmutableMultiset =
ImmutableSortedMultiset =
Bean =
FlexiBean =
StrBuilder =
